---
import { getEntry } from 'astro:content'
import readingTime from 'reading-time'

import { WORDS_PER_MINUTE } from '@common/constants'

import BaseLayout from './BaseLayout.astro'

const { frontmatter } = Astro.props
const { lang } = Astro.params

// TODO: read page from somewhere else
const page = await getEntry('post', frontmatter.slug)

if (!page) return Astro.redirect('/404/')

const { text: readingTimeText } = readingTime(page.body, { wordsPerMinute: WORDS_PER_MINUTE })
---

<BaseLayout title={frontmatter.title}>
  <section class="flex flex-col gap-2">
    <h1 class="uppercase text-2xl mb-5">{frontmatter.title}</h1>
    <img src="/images/localhost-https/hero.png" class="w-full" alt="A starry night sky." />
    <div class="h-full flex flex-wrap gap-4 my-6">
      <div class="flex flex-col">
        <span class="font-bold">Time to read</span>
        <span>~{readingTimeText}</span>
      </div>

      <div class="flex flex-col">
        <span class="font-bold">Published</span>
        <time datetime={frontmatter.date}>
          {
            new Date(frontmatter.date).toLocaleString(undefined, {
              year: 'numeric',
              month: 'long',
              day: '2-digit',
            })
          }
        </time>
      </div>

      <div class="flex flex-col">
        <span class="font-bold">Authors</span>
        <span>{frontmatter.author}</span>
      </div>
    </div>
  </section>

  <section class="post">
    <slot />
  </section>

  <ul class="flex gap-1.5">
    {
      frontmatter.tags.map((tag: string) => (
        <li class="lowercase text-sm">
          <a href={`/${lang}/tags/${tag}`} class="p-1.5 bg-rose-900 rounded-sm">
            {tag}
          </a>
        </li>
      ))
    }
  </ul>

  <!-- <script is:inline>
    const codeBlocks = document.querySelectorAll('pre')

    codeBlocks.forEach((block) => {
      const wrapper = document.createElement('div')
      wrapper.className = 'relative group leading-4'

      const copyButton = document.createElement('copy-code-button')
      copyButton.className =
        'absolute top-2 right-2 text-transparent group-hover:text-white duration-300 transition ease-in-out'
      block.setAttribute('tabindex', '0')
      block.appendChild(copyButton)

      block.parentNode.insertBefore(wrapper, block)
      wrapper.appendChild(block, copyButton)

      copyButton.addEventListener('click', async () => {
        await copyCode(block, copyButton)
      })
    })

    async function copyCode(block, button) {
      let code = block.querySelector('code')
      let text = code.innerText

      await navigator.clipboard.writeText(text)

      button.appendChild = 'âœ… copied'

      setTimeout(() => {
        button.innerText = 'copy'
      }, 1000)
    }
  </script> -->
</BaseLayout>
