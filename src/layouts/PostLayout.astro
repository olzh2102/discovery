---
import { getEntry } from 'astro:content'
import readingTime from 'reading-time'
import BaseLayout from './BaseLayout.astro'
import { WORDS_PER_MINUTE } from '@common/constants'

const { frontmatter } = Astro.props
const { lang } = Astro.params
console.log(Astro.props.text)

// TODO: read page from somewhere else
const page = await getEntry('post', frontmatter.slug)

if (!page) return Astro.redirect('/404/')

const { text: readingTimeText } = readingTime(page.body, { wordsPerMinute: WORDS_PER_MINUTE })
---

<BaseLayout title={frontmatter.title}>
  <h1>{frontmatter.title}</h1>

  <section class="h-[200px] flex gap-2 justify-between max-md:flex-col items-center my-8">
    <div>post image goes here</div>
    <div class="rounded-md border-solid border-2 border-white h-full flex flex-col p-2">
      <span>{readingTimeText}</span>

      <time datetime={frontmatter.date}>
        {
          new Date(frontmatter.date).toLocaleString(undefined, {
            year: 'numeric',
            month: 'long',
            day: '2-digit',
          })
        }
      </time>
      <span>{frontmatter.author}</span>
    </div>
  </section>

  <slot />

  <ul class="flex gap-1.5">
    {
      frontmatter.tags.map((tag: string) => (
        <li class="lowercase text-sm">
          <a href={`/${lang}/tags/${tag}`} class="p-1.5 bg-rose-900 rounded-sm">
            {tag}
          </a>
        </li>
      ))
    }
  </ul>
</BaseLayout>

<script is:inline>
  const codeBlocks = document.querySelectorAll('pre')

  codeBlocks.forEach((block) => {
    const wrapper = document.createElement('div')
    wrapper.className = 'relative group'

    const copyButton = document.createElement('button')
    copyButton.innerText = 'copy'
    copyButton.className =
      'absolute top-1 right-2 text-transparent group-hover:text-white duration-300 transition ease-in-out'
    block.setAttribute('tabindex', '0')
    block.appendChild(copyButton)

    block.parentNode.insertBefore(wrapper, block)
    wrapper.appendChild(block, copyButton)

    copyButton.addEventListener('click', async () => {
      await copyCode(block, copyButton)
    })
  })

  async function copyCode(block, button) {
    let code = block.querySelector('code')
    let text = code.innerText

    await navigator.clipboard.writeText(text)

    button.innerText = 'âœ… copied'

    setTimeout(() => {
      button.innerText = 'copy'
    }, 1000)
  }
</script>

<style></style>
