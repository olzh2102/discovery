---
import { getEntry } from 'astro:content'
import type { CollectionEntry } from "astro:content";
import readingTime from 'reading-time'

import { LOCALES, WORDS_PER_MINUTE } from '@common/constants'
import Tag from '@components/tag.astro'

import t from '../../public/lang.json'

import BaseLayout from './BaseLayout.astro'

const { frontmatter } = Astro.props as {frontmatter: CollectionEntry<'post'>['data'] & { slug: string }}

const { lang } = Astro.params as { lang: keyof typeof LOCALES }

const BASE_URL = 'https://www.botqa.xyz'

// TODO: read page from somewhere else
const page = await getEntry('post', frontmatter.slug)

if (!page) return Astro.redirect('/404/')

const { minutes } = readingTime(page.body, { wordsPerMinute: WORDS_PER_MINUTE })

const publishedTime = new Date(
  frontmatter.date).toLocaleString(LOCALES[lang],
  {
    year: 'numeric',
    month: 'long',
    day: '2-digit',
})

const seoOptions = {
  openGraph: {
    basic: {
      title: frontmatter.title,
      type: 'article',
      image: BASE_URL + '/' + frontmatter.heroImageUrl,
    },
    article: {
      publishedTime,
      authors: frontmatter.authors,
      tags: frontmatter.tags,
    },
    image: {
      url: BASE_URL + '/' + frontmatter.heroImageUrl,
      type: 'png',
      alt: 'hero image'
    }
  }
}
---

<BaseLayout title={frontmatter.title} description={frontmatter.description} seoOptions={seoOptions}>
  <section class="flex flex-col gap-2">
    <h1 class="uppercase text-2xl mb-5">{frontmatter.title}</h1>
    <img src={frontmatter.heroImageUrl} class="w-full" alt="hero image related to post" />
    <div class="h-full flex flex-wrap gap-4 my-6">
      <div class="flex flex-col">
        <span class="font-bold">{t[lang]['post']['timeToRead']}</span>
        <span>~{Math.ceil(minutes)} {t[lang]['post']['minsRead']}</span>
      </div>

      <div class="flex flex-col">
        <span class="font-bold">{t[lang]['post']['published']}</span>
        <time datetime={publishedTime}>{publishedTime}</time>
      </div>

      <div class="flex flex-col">
        <span class="font-bold">{t[lang]['post']['authors']}</span>
        <span>{frontmatter.authors.join(', ')}</span>
      </div>
    </div>
  </section>

  <section class="post">
    <slot />
  </section>

  <ul class="flex gap-1.5 mt-4 list-none">
    {
      frontmatter.tags.map((tag: string) => (
        <li class="lowercase text-sm">
          <Tag tag={tag} />
        </li>
      ))
    }
  </ul>
</BaseLayout>
